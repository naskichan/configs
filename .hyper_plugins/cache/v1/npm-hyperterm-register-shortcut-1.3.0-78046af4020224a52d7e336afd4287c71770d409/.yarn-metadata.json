{
  "manifest": {
    "name": "hyperterm-register-shortcut",
    "version": "1.3.0",
    "description": "Register user-configurable global shortcuts for HyperTerm which respect config changes",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/Soutar/hyperterm-register-shortcut.git"
    },
    "scripts": {
      "test": "jest **/*.test.js"
    },
    "keywords": [
      "hyperterm",
      "shortcut",
      "hotkey",
      "helper"
    ],
    "author": {
      "name": "John Soutar",
      "email": "john@soutar.me"
    },
    "license": "ISC",
    "devDependencies": {
      "jest": "^19.0.2"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\info\\AppData\\Roaming\\Hyper\\.hyper_plugins\\cache\\v1\\npm-hyperterm-register-shortcut-1.3.0-78046af4020224a52d7e336afd4287c71770d409\\package.json",
    "readmeFilename": "README.md",
    "readme": "# hyperterm-register-shortcut [![Build Status](https://travis-ci.org/soutar/hyperterm-register-shortcut.svg?branch=master)](https://travis-ci.org/soutar/hyperterm-register-shortcut)\nRegister user-customisable global shortcuts for HyperTerm which respect config changes. This module is designed to be used by HyperTerm plugins to implement global shortcuts and can't be installed as a plugin itself.\n\nFor the configKey `foo`, `hyperterm-register-shortcut` will look for the user's preferred hotkey in following order:\n- `config.hotkeys.foo`\n- `config.foo.hotkey`\n- `config.fooShortcut`\n\n## Usage\n\nFirst, import the helper from `hyperterm-register-shortcut`\n\n```js\nconst registerShortcut = require('hyperterm-register-shortcut');\n```\n\nThen use registerShortcut to create an `onApp` method to export:\n\n```js\nconst configKey = 'YOUR_SHORTCUT_NAME';\nconst defaultShortcut = 'Ctrl+;';\n\nfunction foo (app) {\n  // do something with app\n  console.log('bar');\n}\n\nmodule.exports = {\n  onApp: registerShortcut(configKey, foo, defaultShortcut)\n}\n```\nOr, if you have other work you need to do inside `onApp`, export your own function which calls `registerShortcut` then calls the function returned from it with `app` as the parameter\n\n```js\nconst configKey = 'YOUR_SHORTCUT_NAME';\n\nfunction foo () {\n  // do something with app\n  console.log('bar');\n}\n\nmodule.exports = {\n  onApp: (app) => {\n    // do some other onApp stuff first\n    registerShortcut(configKey, foo)(app)\n  }\n}\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hyperterm-register-shortcut/-/hyperterm-register-shortcut-1.3.0.tgz#78046af4020224a52d7e336afd4287c71770d409",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hyperterm-register-shortcut/-/hyperterm-register-shortcut-1.3.0.tgz",
    "hash": "78046af4020224a52d7e336afd4287c71770d409",
    "registry": "npm",
    "packageName": "hyperterm-register-shortcut"
  },
  "registry": "npm",
  "hash": "78046af4020224a52d7e336afd4287c71770d409"
}